---
# Применяем Tigera Operator
- name: Apply Tigera operator (Calico)
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: >
    kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/tigera-operator.yaml

# Ждём, пока оператор поднимется
- name: Wait for tigera-operator to be available
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: >
    kubectl -n tigera-operator rollout status deployment/tigera-operator --timeout=180s
  register: tigera_rollout
  retries: 5
  delay: 10
  until: tigera_rollout.rc == 0

# Применяем дефолтные CR (включая IPPool). По умолчанию там 192.168.0.0/16 — совпадает с pod_cidr.
- name: Apply Calico custom resources (default IPPool)
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: >
    kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/custom-resources.yaml

# Ждём, пока calico-node DaemonSet прогрузится на всех нодах
- name: Wait for calico-node DaemonSet to be ready
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: >
    kubectl -n calico-system rollout status ds/calico-node --timeout=300s
  register: calico_node_rollout
  retries: 6
  delay: 10
  until: calico_node_rollout.rc == 0

# Ждём CoreDNS (обычно он станет Ready после CNI)
- name: Wait for CoreDNS to be ready
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: >
    kubectl -n kube-system rollout status deploy/coredns --timeout=300s
  register: coredns_rollout
  retries: 6
  delay: 10
  until: coredns_rollout.rc == 0

